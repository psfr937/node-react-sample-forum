{"version":3,"sources":["webpack:///./src/components/utils/ErrorList.js","webpack:///./src/containers/VehicleList/VehicleList.js","webpack:///./src/components/utils/InfiniteScroll.js"],"names":[],"mappings":"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","file":"0.974e1469.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { push } from 'connected-react-router';\nimport isString from 'lodash/isString';\nimport { connect } from 'react-redux';\nimport { removeError } from '../../actions/error';\nimport ErrorCodes from '../../constants/ErrorCodes';\n\nfunction renderMetaContent(metaContent) {\n  if (isString(metaContent)) {\n    return metaContent;\n  }\n\n  return <pre>{JSON.stringify(metaContent, null, 2)}</pre>;\n}\n\nfunction renderMeta(meta) {\n  if (isString(meta)) {\n    return <p>{meta}</p>;\n  }\n\n  return (\n    <tbody>\n      {Object.keys(meta).map(key => (\n        <tr key={key}>\n          <td>{key}</td>\n          <td>{renderMetaContent(meta[key])}</td>\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nconst ErrorList = ({ errors, dispatch }) => {\n  if (errors !== null) {\n    errors.map(error => {\n      if (\n        [ErrorCodes.TOKEN_EXPIRATION, ErrorCodes.BAD_TOKEN].indexOf(\n          error.code\n        ) >= 0\n      ) {\n        dispatch(removeError(error.id));\n        dispatch(push('/user/login'));\n      }\n      if (\n        [ErrorCodes.USER_UNAUTHORIZED, ErrorCodes.PERMISSION_DENIED].indexOf(\n          error.code\n        ) >= 0\n      ) {\n        dispatch(removeError(error.id));\n        dispatch(push('/'));\n      }\n\n      return (\n        <li key={error.id}>\n          <h4>{error.title}</h4>\n          {` ${error.detail}`}\n          {error.meta && renderMeta(error.meta)}\n        </li>\n      );\n    })\n  }\n  return null;\n};\n\nErrorList.propTypes = {\n  errors: PropTypes.any,\n  dispatch: PropTypes.func\n};\n\nErrorList.defaultProps = {\n  errors: null,\n  dispatch: null\n};\n\nexport default connect(state => ({\n  errors: state.errors\n}))(ErrorList);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/utils/ErrorList.js","/* @flow */\n\nimport React, { PureComponent } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport type { Connector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { hot } from 'react-hot-loader';\nimport { push } from 'connected-react-router';\nimport ErrorList from '../../components/utils/ErrorList';\nimport {\n  createVehicle,\n  updateVehicle,\n  removeVehicle,\n  fetchVehicles,\n  fetchVehiclesIfNeeded\n} from '../../actions/vehicles';\nimport { setCrrentPage } from '../../actions/page';\nimport VehicleListCard from '../../components/VehicleListCard/index';\nimport InfiniteScroll from '../../components/utils/InfiniteScroll';\nimport styles from '../../styles/main.scss'\n\nimport type {\n  VehicleList as VehicleListType,\n  Dispatch,\n  ReduxState\n} from '../../types/index';\n\ntype Props = {\n  vehicleList: VehicleListType,\n  fetchVehiclesIfNeeded: () => void\n};\n\n\nclass VehicleList extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.loadItems = this._loadItems.bind(this);\n    this.handleAddClick = this._handleAddClick.bind(this);\n    this.handleRemoveClick = this._handleRemoveClick.bind(this);\n    this.handleSaveClick = this._handleSaveClick.bind(this);\n    console.log('another fff');\n  }\n\n  componentWillMount() {\n    console.log('will mount');\n  }\n\n  componentDidMount() {\n    this.props.fetchVehiclesIfNeeded(this.props.match.params.page);\n    console.log('hello');\n  }\n\n  _handleAddClick() {\n    const text = this.vehicletext.value;\n    console.log(text);\n    this.props.createVehicle(text).then(() => {\n      this.vehicletext.value = '';\n    });\n\n  }\n\n  _handleSaveClick(id, newText) {\n    this.props.updateVehicle(id, newText);\n  }\n\n  _handleRemoveClick(id) {\n    this.props.removeVehicle(id);\n  }\n\n  _loadItems(page) {\n    const { location } = this.props;\n    this.props.setCrrentPage(page);\n    this.props.fetchVehiclesIfNeeded(page);\n    if (location !== undefined) {\n      this.props.push({\n        pathname: location.pathname,\n        query: {page: this.props.page.current}\n      });\n    }\n  }\n\n  renderVehicleList() {\n    const { vehicleList } = this.props;\n    let loader;\n    if (\n      !vehicleList.readyStatus ||\n      vehicleList.readyStatus === 'VEHICLES_INVALID' ||\n      vehicleList.readyStatus === 'VEHICLES_REQUESTING'\n    ) {\n      loader = <div className=\"loader\">Loading ...</div>;\n    } else if (vehicleList.readyStatus === 'VEHICLES_FAILURE') {\n      loader = <p>Oops, Failed to load items!</p>;\n    }\n\n    const items = [];\n    this.props.vehicles.map(vehicle => {\n      items.push(\n        <VehicleListCard\n          vehicle={vehicle._id}\n          onRemoveClick={this.handleRemoveClick(vehicle._id)}\n          onSaveClick={this.handleSaveClick(vehicle._id)}\n          name={vehicle.text}\n        />\n      );\n    });\n    console.log(items);\n    return (\n    (items === []) ?\n      <div>\n        <p>Uh oh, seems like there is no any items yet! Please add one :)</p>\n      </div> :\n      <InfiniteScroll\n        page={this.props.page.current}\n        hasMore={this.props.page.current < this.props.page.last}\n        loadMore={this.loadItems}\n        loader={loader}\n      >\n        <div className=\"tracks\">{items}</div>\n      </InfiniteScroll>\n    );\n  }\n\n  render() {\n    const { page } = this.props;\n    console.log(page);\n    return (\n      <div className={styles.siteContent}>\n        <div className={styles.container}>\n          <ErrorList />\n          <h3 className={styles.h6}>\n            Vehicle List ({`${page.current} / ${page.total}`})\n          </h3>\n          <input\n            disabled={false}\n            type=\"text\"\n            ref={c => {\n              this.vehicletext = c;\n            }}\n          />\n          <button\n            className={styles.btnBlue}\n            disabled={false}\n            onClick={this.handleAddClick}\n          >\n            Add Vehicle\n          </button>\n          {page.current !== 1 && (\n            <div>The input box is only available for page 1</div>\n          )}\n          {this.renderVehicleList()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ location, vehicleList, pagination, entity }: ReduxState) => {\n  const { page, pages } = pagination.vehicles;\n  const vehicleIds = Array.prototype.flatten(\n    Object\n      .keys(pages)\n      .map(pageId => pages[pageId].ids)\n  );\n\n  const vehicles =  (\"ids\" in vehicleIds) ? vehicleIds.ids.map(id => entity.vehicles[id]) : [];\n\n  return {\n    location,\n    vehicleList,\n    vehicles,\n    page\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  push: (pathname, query) => dispatch(push(pathname, query)),\n  createVehicle: text => dispatch(createVehicle(text)),\n  updateVehicle: (id, text) => dispatch(updateVehicle(id, text)),\n  removeVehicle: id => dispatch(removeVehicle(id)),\n  fetchVehiclesIfNeeded: () => dispatch(fetchVehiclesIfNeeded()),\n  setCrrentPage: page => dispatch(setCrrentPage('VEHICLE', page))\n});\n\nconst connector: Connector<{}, Props> = connect(\n  mapStateToProps,\n  mapDispatchToProps\n);\n\nexport default compose(hot(module), withRouter, connector)(VehicleList);\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/VehicleList/VehicleList.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InfiniteScroll extends Component {\n  static propTypes = {\n    children: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n      .isRequired,\n    element: PropTypes.string,\n    hasMore: PropTypes.bool,\n    initialLoad: PropTypes.bool,\n    isReverse: PropTypes.bool,\n    loader: PropTypes.object,\n    loadMore: PropTypes.func.isRequired,\n    pageStart: PropTypes.number,\n    ref: PropTypes.func,\n    threshold: PropTypes.number,\n    useCapture: PropTypes.bool,\n    useWindow: PropTypes.bool\n  };\n\n  static defaultProps = {\n    element: 'div',\n    hasMore: false,\n    initialLoad: true,\n    pageStart: 0,\n    ref: null,\n    threshold: 250,\n    useWindow: true,\n    isReverse: false,\n    useCapture: false,\n    loader: null\n  };\n\n  constructor(props) {\n    super(props);\n    this.scrollListener = this.scrollListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.pageLoaded = this.props.pageStart;\n    this.attachScrollListener();\n  }\n\n  componentDidUpdate() {\n    this.attachScrollListener();\n  }\n\n  componentWillUnmount() {\n    this.detachScrollListener();\n    this.detachMousewheelListener();\n  }\n\n  // Set a defaut loader for all your `InfiniteScroll` components\n  setDefaultLoader(loader) {\n    this.defaultLoader = loader;\n  }\n\n  detachMousewheelListener() {\n    let scrollEl = window;\n    if (this.props.useWindow === false) {\n      scrollEl = this.scrollComponent.parentNode;\n    }\n\n    scrollEl.removeEventListener(\n      'mousewheel',\n      this.mousewheelListener,\n      this.props.useCapture\n    );\n  }\n\n  detachScrollListener() {\n    let scrollEl = window;\n    if (this.props.useWindow === false) {\n      scrollEl = this.scrollComponent.parentNode;\n    }\n\n    scrollEl.removeEventListener(\n      'scroll',\n      this.scrollListener,\n      this.props.useCapture\n    );\n    scrollEl.removeEventListener(\n      'resize',\n      this.scrollListener,\n      this.props.useCapture\n    );\n  }\n\n  attachScrollListener() {\n    if (!this.props.hasMore) {\n      return;\n    }\n\n    let scrollEl = window;\n    if (this.props.useWindow === false) {\n      scrollEl = this.scrollComponent.parentNode;\n    }\n\n    scrollEl.addEventListener(\n      'mousewheel',\n      this.mousewheelListener,\n      this.props.useCapture\n    );\n    scrollEl.addEventListener(\n      'scroll',\n      this.scrollListener,\n      this.props.useCapture\n    );\n    scrollEl.addEventListener(\n      'resize',\n      this.scrollListener,\n      this.props.useCapture\n    );\n\n    if (this.props.initialLoad) {\n      this.scrollListener();\n    }\n  }\n\n  mousewheelListener(e) {\n    // Prevents Chrome hangups\n    // See: https://stackoverflow.com/questions/47524205/random-high-content-download-time-in-chrome/47684257#47684257\n    if (e.deltaY === 1) {\n      e.preventDefault();\n    }\n  }\n\n  scrollListener() {\n    const el = this.scrollComponent;\n    const scrollEl = window;\n\n    let offset;\n    if (this.props.useWindow) {\n      const doc =\n        document.documentElement || document.body.parentNode || document.body;\n      const scrollTop =\n        scrollEl.pageYOffset !== undefined\n          ? scrollEl.pageYOffset\n          : doc.scrollTop;\n      if (this.props.isReverse) {\n        offset = scrollTop;\n      } else {\n        offset =\n          this.calculateTopPosition(el) +\n          (el.offsetHeight - scrollTop - window.innerHeight);\n      }\n    } else if (this.props.isReverse) {\n      offset = el.parentNode.scrollTop;\n    } else {\n      offset =\n        el.scrollHeight - el.parentNode.scrollTop - el.parentNode.clientHeight;\n    }\n\n    if (offset < Number(this.props.threshold)) {\n      this.detachScrollListener();\n      // Call loadMore after detachScrollListener to allow for non-async loadMore functions\n      if (typeof this.props.loadMore === 'function') {\n        this.props.loadMore((this.pageLoaded += 1));\n      }\n    }\n  }\n\n  calculateTopPosition(el) {\n    if (!el) {\n      return 0;\n    }\n    return el.offsetTop + this.calculateTopPosition(el.offsetParent);\n  }\n\n  render() {\n    const {\n      children,\n      element,\n      hasMore,\n      initialLoad,\n      isReverse,\n      loader,\n      loadMore,\n      pageStart,\n      ref,\n      threshold,\n      useCapture,\n      useWindow,\n      ...props\n    } = this.props;\n\n    props.ref = node => {\n      this.scrollComponent = node;\n      if (ref) {\n        ref(node);\n      }\n    };\n\n    const childrenArray = [children];\n    if (hasMore) {\n      if (loader) {\n        isReverse ? childrenArray.unshift(loader) : childrenArray.push(loader);\n      } else if (this.defaultLoader) {\n        isReverse\n          ? childrenArray.unshift(this.defaultLoader)\n          : childrenArray.push(this.defaultLoader);\n      }\n    }\n    return React.createElement(element, props, childrenArray);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/utils/InfiniteScroll.js"],"sourceRoot":""}