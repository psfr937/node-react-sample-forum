{"version":3,"sources":["webpack:///./src/components/utils/ErrorList.js","webpack:///./src/containers/Home/Home.js"],"names":[],"mappings":"sDAQ2B,aACzB,OAIA,UAAO,wBAAM,UAAe,YAAa,KAC1C,IAEmB,aAClB,OACE,QAAO,sBAGT,QACE,0BACG,YAAY,QAAM,IAAI,kBACrB,yBACE,8BACA,+BAAK,OAAuB,OAKrC,GAED,qHA3BA,QA2BM,EAAY,WAA0B,oBAC1C,eACE,KADE,QACK,IAAI,WACT,OAKE,EAJA,GAAC,IAAW,iBAAkB,IAAW,WAAW,QAClD,EAAM,UAGC,YAAY,EACrB,OAAS,eAEX,iBAKE,CAJA,GAAC,IAAW,kBAAmB,IAAW,mBAAmB,QAC3D,EAAM,UAGC,YAAY,EACrB,OAAS,eAGX,OACE,wBAAI,IAAK,EACP,2BAAK,OAAM,WACN,EACJ,SAAM,MAAQ,EAAW,EAG/B,MAEH,GACD,IA9BD,EAgCA,EAAU,UACR,QAAQ,IACR,aAAU,IAAU,MAGtB,EAAU,aACR,QACA,cAGF,UAAe,kBAAQ,kBACrB,QAAQ,EAAM,OACZ,mqBC1DJ,icAAa,aAAb,iJACc,WAAM,IACR,GAAU,KAAK,QACvB,QAAM,SAAS,OAAa,SAAO,KACjC,UACE,SAAQ,IACT,4BAHH,EAIE,WACE,GAAM,SAAS,OAChB,QAEJ,EAXH,iCAaW,OAEkB,KAAK,MAAtB,WAAQ,IAChB,oBAAQ,IACR,uBAAQ,IAAI,KACZ,OACE,yBAAK,UAAW,IACd,sCAAK,UAAW,IAEd,+BAAC,EAAD,GAAQ,MACR,kCAAK,UAAW,IACd,+BAAK,UAAW,IACd,+BAAK,UAAW,IAChB,mCAAK,UAAW,IACd,0CACA,0CACA,iDAAG,UAAW,IAAO,UAGzB,0CAAK,UAAW,IACd,+BAAK,UAAW,IAChB,mCAAK,UAAW,IACd,0CACA,2CACA,4DAAG,UAAW,IAAO,UAQlC,mBA7CH,QAgDA,aAAM,EAAkC,kBAAQ,eAAG,UAAM,gBAAS,QAAW,UAAO,eAClF,CACA,OACA,iBAAQ,CACR,QAAM,GAAQ,GAIhB,gBAAe,kBAAQ,OAAI,UAAgC","file":"1.eb499585.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { push } from 'connected-react-router';\nimport isString from 'lodash/isString';\nimport { connect } from 'react-redux';\nimport { removeError } from '../../actions/error';\nimport ErrorCodes from '../../constants/ErrorCodes';\n\nfunction renderMetaContent(metaContent) {\n  if (isString(metaContent)) {\n    return metaContent;\n  }\n\n  return <pre>{JSON.stringify(metaContent, null, 2)}</pre>;\n}\n\nfunction renderMeta(meta) {\n  if (isString(meta)) {\n    return <p>{meta}</p>;\n  }\n\n  return (\n    <tbody>\n      {Object.keys(meta).map(key => (\n        <tr key={key}>\n          <td>{key}</td>\n          <td>{renderMetaContent(meta[key])}</td>\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nconst ErrorList = ({ errors, dispatch }) => {\n  if (errors !== null) {\n    errors.map(error => {\n      if (\n        [ErrorCodes.TOKEN_EXPIRATION, ErrorCodes.BAD_TOKEN].indexOf(\n          error.code\n        ) >= 0\n      ) {\n        dispatch(removeError(error.id));\n        dispatch(push('/user/login'));\n      }\n      if (\n        [ErrorCodes.USER_UNAUTHORIZED, ErrorCodes.PERMISSION_DENIED].indexOf(\n          error.code\n        ) >= 0\n      ) {\n        dispatch(removeError(error.id));\n        dispatch(push('/'));\n      }\n\n      return (\n        <li key={error.id}>\n          <h4>{error.title}</h4>\n          {` ${error.detail}`}\n          {error.meta && renderMeta(error.meta)}\n        </li>\n      );\n    })\n  }\n  return null;\n};\n\nErrorList.propTypes = {\n  errors: PropTypes.any,\n  dispatch: PropTypes.func\n};\n\nErrorList.defaultProps = {\n  errors: null,\n  dispatch: null\n};\n\nexport default connect(state => ({\n  errors: state.errors\n}))(ErrorList);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/utils/ErrorList.js","/* @flow */\n\nimport React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport type { Connector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport Helmet from 'react-helmet';\nimport { hot } from 'react-hot-loader';\nimport type { ReduxState } from '../../types';\nimport ErrorList from '../../components/utils/ErrorList';\nimport styles from '../../styles/main.scss';\nimport updateLocale from '../../actions/intl';\nimport { pushErrors } from '../../actions/error';\nimport RegisterForm from '../user/Register/RegisterForm';\n\ntype Props = {};\n\n// Export this for unit testing more easily\nexport class Home extends Component<Props> {\n  setLanguage(lang) {\n    const { store } = this.context;\n    store.dispatch(updateLocale(lang)).then(\n      () => {\n        console.log('load locale (manually) ok');\n      },\n      err => {\n        store.dispatch(pushErrors(err));\n      }\n    );\n  }\n\n  render() {\n\n    const { isAuth, user } = this.props;\n    console.log('Home props:');\n    console.log(this.props);\n    return (\n      <div className={styles.siteContent}>\n        <div className={styles.bgContainer}>\n\n          <Helmet title=\"Home\" />\n          <div className={styles.flex}>\n            <div className={styles.half}>\n              <div className={styles.overlay} />\n              <div className={styles.half_content}>\n                <h2>Rent a Car</h2>\n                <h5>Drive when you need it</h5>\n                <a className={styles.btn_more}>Do a survey</a>\n              </div>\n            </div>\n            <div className={styles.half}>\n              <div className={styles.overlay} />\n              <div className={styles.half_content}>\n                <h2>Lease a Car</h2>\n                <h5>Earn passive income with your car</h5>\n                <a className={styles.btn_more}>Do a survey</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nconst connector: Connector<{}, Props> = connect(({ home, routing, cookies: { token, user } }: ReduxState) => ({\n  home,\n  routing,\n  isAuth: !!token,\n  user: user || {}\n}));\n\n// Enable hot reloading for async componet\nexport default compose(hot(module), withRouter, connector)(Home);\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/Home/Home.js"],"sourceRoot":""}